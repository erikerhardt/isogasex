# isogasex
# input file
# sets parameters for isogasex R package by David T. Hanson and Erik B. Erhardt of UNM

Template_version:               4               # Template 4, starting at isogasex version: 0.1-20, Date: 2012-09-05

# Parameter                     Value                   # Detail
sw_use_TDL:                     1                       # 1 = process TDL   data, 0 = do not use TDL   data
TDL_fn:                         20120530_CR3000_2_RawData.dat     # TDL filename
sw_use_Licor:                   1                       # 1 = process Licor data, 0 = do not use Licor data
Licor_fn:                       Soybean Flame 5         # Licor filename


# Prefix for output filenames
output_fn_prefix:               write_out       # Output files will have this prefix on the filenames. You can run the analysis with different settings and name the output files accordingly.
# Time Window                                   # Analysis range is the intersection of the TDL times, Licor times, and Time window.  Leave blank to use full time range (intersection of TDL and Licor).
Start_date:                                     # mm/dd/yy    date is required because of possibility of multi-day runs -- sorry. Also, just 2 digits to the year.)
Start_time:                                     # hh:mm:ss    (24 hour, so 15:00:00 is 3pm, please specify down to the seconds.)
End_date:                                       # mm/dd/yy
End_time:                                       # hh:mm:ss    (NOTE: leave some time (a few minutes) on either side of actual time range of interest, to help the interpolation behave)
# OUTPUT SECTION
print_TDL_missing:              1               # Print rows in TDL file with missing values to screen and output file
print_TDL_cycle_timing:         0               # Print TDL cycle timing to file prefix_TDL_site_timing.csv (takes a long time)
write_all_obs_file:             0               # Write all observations file
save_RData:                     0               # Save R workspace (all data and calculated variables in memory) to a file (can be used to calculate specific quantities from two runs, e.g., Licor vs TDL A.photosynthesis)


# plot formats
png:                            0
eps:                            0
pdf:                            0
bmp:                            0
jpeg:                           1
tiff:                           2

# interpolation                                 # 1 = smooth.spline() like tanks
                                                # 2 = use last reference mean until next measurement (horizontal interp) - for abrupt ref gas changes
interp_tank_hi:                 1               # high tank
interp_tank_low:                1               # low tank
interp_reference:               2               # leaf reference

# Bootstrap Confidence Intervals and random number seed
R_bootstrap:                    0               # Number of bootstrap replicates to assess uncertainty of estimates
sig_CI:                         0.95            # Confidence level for central confidence interval
seed:                           1234            # pseudorandom number seed, 0 is random based on clock, set to integer for results to be repeatable

# If using TDL file       TDL sampling information        number.* is TDL field "PrevSite"
number_tank_hi:                 9               # high tank
number_tank_low:                10              # low tank
number_reference:               1               # leaf reference
number_chamber:                 21              # leaf chamber
name_tank_hi:                   tank_hi         # high tank
name_tank_low:                  tank_low        # low tank
name_reference:                 reference       # leaf reference
name_chamber:                   chamber         # leaf chamber
                                                # in seconds
seconds_tank_hi:                10              # high tank
seconds_tank_low:               10              # low tank
seconds_reference:              10              # leaf reference
seconds_chamber:                10              # leaf chamber
Hz:                             10              # sampling rate (number per second), output of TDL
seconds_exclude_first_chamber:  20              # time it takes to equilbrate from reference to leaf chamber

# If using Licor file
Licor_TDL_time_offset_seconds:          0       # positive indicates Licor is ahead of TDL
                                                # (e.g., 16 has Licor = 12:00:00 matches TDL = 12:00:16)
                                                # (that is, gas takes 16 seconds to get from Licor to TDL)

# CONSTANTS SECTION
true_value_hi_12C:              473.335802876395    # True calibration tank values
true_value_hi_13C:              5.18320929165481
true_value_lo_12C:              243.473784568456
true_value_lo_13C:              2.66630113136477

fo_13C:                         0.004922        # if only 12 and 13CO2 are measured, fo means fraction of other isotopologues not measured
fo_18O:                         0.000821        # if 12 and 13CO2, and 12C18O16O are measured (not ususal for Dave's machine)
Rstd_13C:                       0.0111797       # (Rvpdb)
Rstd_18O:                       0.0020052       # (Rvsmow) may occaisionally be used with Dave's machine, method not tested yet

Gamma_star:                     1               # CO2 compensation point in absence of day respiration.  I will need to specify experiment specific values for these constants in the equations below
f_photo_respiration:            1               # fractionation associated with photorespiration
e:                              1               # fractionation associated with day respiration
Rd:                             1               # day respiration
k:                              1               # carboxylation efficiency, often initial slope of A/Ci, or better A/Cc
b_gm:                           29
b_modeling:                     27
b_s:                            1.1             # per mil fractionation as CO2 enters solution at 25C bs =  1.1

a:                              4.44            # per mil fractionation in still air (stomatal pore and substomata) a = 4.44
a_b:                            2.96            # per mil fractionation in boundary layer (slightly mixed), a.b = 2.96
a_l:                            0.7             # per mil fractionation during diffusion in water, a.l =  0.7
                                                # a_i = a.l+b.s

# Which values to use
Licor_or_TDL_A_photosynthesis:          1       # 0=Licor, 1=TDL (1 is the "Ci ternary corrected" data)
                                                # 1 to override, then fill in value to use as a constant for the entire analysis
override_Licor_flow_rate:               1       # 0=use Licor values, 1=use specified value below
Licor_flow_rate:                        288     # flow rate
override_Licor_leaf_area:               1       # 0=use Licor values, 1=use specified value below
Licor_leaf_area:                        5       # leaf area
override_Licor_boundary_layer_cond_to_water:  1       # 0=use Licor values, 1=use specified value below
Licor_boundary_layer_cond_to_water:     2.55    # boundary.layer.cond.to.water
override_Licor_H2OS:                    1       # 0=use Licor values, 1=use specified value below
Licor_H2OS:                             88      # H2OS
override_Licor_StmRat:                  1       # 0=use Licor values, 1=use specified value below
Licor_StmRat:                           99      # StmRat
# constants in formulas not given names
gbc_1_37:                       1.37            # gbc  BLcond/1.37 boudary layer conductance for CO2
gsc_1_6:                        1.6             # gsc  gsw/1.6 stomatal conductance for CO2

# Calculation information
calc_pc_to_use:                 1               # 1 = pc.using.gm
                                                # 2 = pc.using.simple.Delta.for.gm
                                                # 3 = pc.using.simple.Delta.for.modeling
                                                # 4 = pc.using.complex.Delta.no.decarboxylation
                                                # 5 = pc.using.complex.Delta.full.model
# NOT USED
calc_Delta_i_to_use:                            # 1 = Delta.i.simple.for.gm
                                                # 2 = Delta.i.simple.for.modeling
                                                # 3 = Delta.i.complex.for.gm

calc_gm_to_use:                 1               # 1 = gm.point.simple
                                                # 2 = gm.point.complex

